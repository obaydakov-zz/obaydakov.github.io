<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Oleg Baydakov</title>
    <link>https://obaydakov.github.io/tags/golang/</link>
    <description>Recent content in Golang on Oleg Baydakov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://obaydakov.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Alex Pliutau&#39;s blog. -Golang</title>
      <link>https://obaydakov.github.io/post/2018/alex-pliutau-s-blog-golang/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/alex-pliutau-s-blog-golang/</guid>
      <description>Link
Collection of materials for my &amp;ldquo;packagemain&amp;rdquo; Youtube Channel about Go.</description>
    </item>
    
    <item>
      <title>Gopher Academy</title>
      <link>https://obaydakov.github.io/post/2017/gopher-academy/</link>
      <pubDate>Fri, 15 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/gopher-academy/</guid>
      <description>Link</description>
    </item>
    
    <item>
      <title>Go Data Science Tooling, Packages, Libraries, etc.</title>
      <link>https://obaydakov.github.io/post/2017/go-data-science-tooling-packages-libraries-etc/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/go-data-science-tooling-packages-libraries-etc/</guid>
      <description>This is a curated list of well-maintained and developing tools, packages, libraries, etc. related to doing data science with Go.
Link</description>
    </item>
    
    <item>
      <title>Machine Learning Explorations</title>
      <link>https://obaydakov.github.io/post/2017/machine-learning-explorations/</link>
      <pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/machine-learning-explorations/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Visualizing Concurrency in Go Posted on Jan 24, 2016</title>
      <link>https://obaydakov.github.io/post/2017/visualizing-concurrency-in-go-posted-on-jan-24-2016/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/visualizing-concurrency-in-go-posted-on-jan-24-2016/</guid>
      <description>Link</description>
    </item>
    
    <item>
      <title>Go Concurrency Patterns: Pipelines and cancellation</title>
      <link>https://obaydakov.github.io/post/2017/go-concurrency-patterns-pipelines-and-cancellation/</link>
      <pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/go-concurrency-patterns-pipelines-and-cancellation/</guid>
      <description>Introduction
Go&amp;rsquo;s concurrency primitives make it easy to construct streaming data pipelines that make efficient use of I/O and multiple CPUs. This article presents examples of such pipelines, highlights subtleties that arise when operations fail, and introduces techniques for dealing with failures cleanly.
What is a pipeline?
There&amp;rsquo;s no formal definition of a pipeline in Go; it&amp;rsquo;s just one of many kinds of concurrent programs. Informally, a pipeline is a series of stages connected by channels, where each stage is a group of goroutines running the same function.</description>
    </item>
    
    <item>
      <title>Write web applications in Go without using a framework</title>
      <link>https://obaydakov.github.io/post/2017/write-web-applications-in-go-without-using-a-framework/</link>
      <pubDate>Sun, 17 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/write-web-applications-in-go-without-using-a-framework/</guid>
      <description>This screencast will teach you how to write a webapp in Go without using a framework. The tutorial is an introductory level tutorial. code: https://github.com/thewhitetulip/write-webapps-in-go-video, the code is put in branches, the code for fourth video is on branch &amp;ldquo;video4&amp;rdquo;
Completed app: https://github.com/thewhitetulip/Tasks.
This series is based on the tutorial https://github.com/thewhitetulip/web-dev-golang-anti-textbook/, you can download it from https://leanpub.com/antitextbookGo/.
Video
Book</description>
    </item>
    
    <item>
      <title>Golang development</title>
      <link>https://obaydakov.github.io/post/2017/golang-development/</link>
      <pubDate>Sat, 16 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/golang-development/</guid>
      <description>Video</description>
    </item>
    
  </channel>
</rss>