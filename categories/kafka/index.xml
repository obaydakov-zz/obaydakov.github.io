<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kafka on Oleg Baydakov</title>
    <link>https://obaydakov.github.io/categories/kafka/</link>
    <description>Recent content in Kafka on Oleg Baydakov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://obaydakov.github.io/categories/kafka/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple messaging framework using Go TCP server and Kafka</title>
      <link>https://obaydakov.github.io/post/2018/simple-messaging-framework-using-go-tcp-server-and-kafka/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/simple-messaging-framework-using-go-tcp-server-and-kafka/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Big, fast, easy data with KSQL</title>
      <link>https://obaydakov.github.io/post/2018/big-fast-easy-data-with-ksql/</link>
      <pubDate>Tue, 13 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/big-fast-easy-data-with-ksql/</guid>
      <description>A look at the new streaming SQL engine for Apache Kafka.
Link
Streaming SQL for Apache Kafka</description>
    </item>
    
    <item>
      <title>Kafka Streams API</title>
      <link>https://obaydakov.github.io/post/2017/kafka-streams-api/</link>
      <pubDate>Tue, 14 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/kafka-streams-api/</guid>
      <description>The easiest way to write mission-critical real-time applications and microservices
Kafka Streams is a client library for building applications and microservices, where the input and output data are stored in Kafka clusters. It combines the simplicity of writing and deploying standard Java and Scala applications on the client side with the benefits of Kafka&amp;rsquo;s server-side cluster technology.
Link</description>
    </item>
    
  </channel>
</rss>