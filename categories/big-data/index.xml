<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Big Data on Oleg Baydakov</title>
    <link>https://obaydakov.github.io/categories/big-data/</link>
    <description>Recent content in Big Data on Oleg Baydakov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://obaydakov.github.io/categories/big-data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Apache MADlib</title>
      <link>https://obaydakov.github.io/post/2018/apache-madlib/</link>
      <pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/apache-madlib/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Realtime Serverless Web Apps with AWS</title>
      <link>https://obaydakov.github.io/post/2018/realtime-serverless-web-apps-with-aws/</link>
      <pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/realtime-serverless-web-apps-with-aws/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AWS AppSync - Up and Running with GraphQL in the Cloud</title>
      <link>https://obaydakov.github.io/post/2018/aws-appsync-up-and-running-with-graphql-in-the-cloud/</link>
      <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/aws-appsync-up-and-running-with-graphql-in-the-cloud/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Docker Meet Cassandra. Cassandra Meet Docker.</title>
      <link>https://obaydakov.github.io/post/2018/docker-meet-cassandra-cassandra-meet-docker/</link>
      <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/docker-meet-cassandra-cassandra-meet-docker/</guid>
      <description></description>
    </item>
    
    <item>
      <title>MonetDBLite for R</title>
      <link>https://obaydakov.github.io/post/2018/monetdblite-for-r/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/monetdblite-for-r/</guid>
      <description>MonetDBLite for R is a SQL database that runs inside the R environment for statistical computing and does not require the installation of any external software. MonetDBLite is based on free and open-source MonetDB, a product of the Centrum Wiskunde &amp;amp; Informatica.
MonetDBLite is similar in functionality to RSQLite, but typically completes queries blazingly fast due to its columnar storage architecture and bulk query processing model. Since both of these embedded SQL options rely on the the R DBI interface, the conversion of legacy RSQLite project syntax over to MonetDBLite code should be a cinch.</description>
    </item>
    
    <item>
      <title>Apache Spark Cheat</title>
      <link>https://obaydakov.github.io/post/2018/apache-spark-cheat/</link>
      <pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/apache-spark-cheat/</guid>
      <description> DataFrameCheatSheet
 Coursera&amp;rsquo;s big data course with Scala and Spark
 Scala - Spark
 Programming Is Awesome
  </description>
    </item>
    
    <item>
      <title>Apache Zeppelin packages</title>
      <link>https://obaydakov.github.io/post/2018/apache-zeppelin-packages/</link>
      <pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/apache-zeppelin-packages/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Awesome Business Intelligence</title>
      <link>https://obaydakov.github.io/post/2018/awesome-business-intelligence/</link>
      <pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/awesome-business-intelligence/</guid>
      <description>A curated list of awesome BI tools.
Link</description>
    </item>
    
    <item>
      <title>Spark Streaming example</title>
      <link>https://obaydakov.github.io/post/2017/spark-streaming-example/</link>
      <pubDate>Tue, 19 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/spark-streaming-example/</guid>
      <description>Slides
Anthology of Technical Assets on Apache Spark’s Structured Streaming
Processing Data in Apache Kafka with Structured Streaming in Apache Spark 2.2</description>
    </item>
    
    <item>
      <title>Scla Code Exampels (Spark)</title>
      <link>https://obaydakov.github.io/post/2017/scla-code-exampels-spark/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/scla-code-exampels-spark/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Using Spark SQL and Spark Streaming together</title>
      <link>https://obaydakov.github.io/post/2017/using-spark-sql-and-spark-streaming-together/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/using-spark-sql-and-spark-streaming-together/</guid>
      <description>It shows basic working example of Spark application that uses Spark SQL to process data stream from Kafka
Link</description>
    </item>
    
    <item>
      <title>Adding Realtime Data Streaming To Your App</title>
      <link>https://obaydakov.github.io/post/2017/adding-realtime-data-streaming-to-your-app/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/adding-realtime-data-streaming-to-your-app/</guid>
      <description>“[Realtime] is about the ability to make better decisions and take meaningful actions at the right time. It’s about detecting fraud while someone is swiping a credit card, or triggering an offer while a shopper is standing on a checkout line, or placing an ad on a website while someone is reading a specific article. It’s about combining and analyzing data so you can take the right action, at the right time, and at the right place.</description>
    </item>
    
    <item>
      <title>Divolte Collector</title>
      <link>https://obaydakov.github.io/post/2017/divolte-collector/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/divolte-collector/</guid>
      <description>Scalable clickstream collection for Hadoop and Kafka
Divolte Collector is a scalable and performant server for collecting clickstream data in HDFS and on Kafka topics. It uses a JavaScript tag on the client side to gather user interaction data, similar to many other web tracking solutions. Divolte Collector can be used as the foundation to build anything from basic web analytics dashboarding to real-time recommender engines or banner optimization systems.</description>
    </item>
    
    <item>
      <title>Hive MySQL Metastore and HiveServer2 Setup</title>
      <link>https://obaydakov.github.io/post/2017/hive-mysql-metastore-and-hiveserver2-setup/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/hive-mysql-metastore-and-hiveserver2-setup/</guid>
      <description>By default, Hive comes with an embedded derby metastore; which stores the meta data and schema of Hive. However, it allows only one user in embedded mode. So it’s advisable to setup an external metastore. Below will be the architecture with MySQL as Metastore.
HiveServer2 – As you can see for JDBC/ODBC communication Hive has a thrift server – HiveServer2. This service is required to do CRUD (DML/DDL) from a script or program (e.</description>
    </item>
    
  </channel>
</rss>