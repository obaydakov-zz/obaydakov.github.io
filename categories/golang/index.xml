<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Oleg Baydakov</title>
    <link>https://obaydakov.github.io/categories/golang/</link>
    <description>Recent content in Golang on Oleg Baydakov</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://obaydakov.github.io/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GraphQL cheatsheet</title>
      <link>https://obaydakov.github.io/post/graphql-cheatsheet/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/graphql-cheatsheet/</guid>
      <description>Link
Golang GraphQL</description>
    </item>
    
    <item>
      <title>Можно ли использовать CQRS паттерн в GO?</title>
      <link>https://obaydakov.github.io/post/2018/%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE-%D0%BB%D0%B8-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C-cqrs-%D0%BF%D0%B0%D1%82%D1%82%D0%B5%D1%80%D0%BD-%D0%B2-go/</link>
      <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE-%D0%BB%D0%B8-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D1%8C-cqrs-%D0%BF%D0%B0%D1%82%D1%82%D0%B5%D1%80%D0%BD-%D0%B2-go/</guid>
      <description>Link</description>
    </item>
    
    <item>
      <title>Building a Golang GraphQL API on AWS Lambda</title>
      <link>https://obaydakov.github.io/post/2018/building-a-golang-graphql-api-on-aws-lambda/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/building-a-golang-graphql-api-on-aws-lambda/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gophercises</title>
      <link>https://obaydakov.github.io/post/2018/gophercises/</link>
      <pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2018/gophercises/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Write a Kubernetes-ready service from zero step-by-step</title>
      <link>https://obaydakov.github.io/post/2017/write-a-kubernetes-ready-service-from-zero-step-by-step/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/write-a-kubernetes-ready-service-from-zero-step-by-step/</guid>
      <description>English</description>
    </item>
    
    <item>
      <title>Gopher Academy</title>
      <link>https://obaydakov.github.io/post/2017/gopher-academy/</link>
      <pubDate>Fri, 15 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/gopher-academy/</guid>
      <description>Link</description>
    </item>
    
    <item>
      <title>An Introduction To gosiris, An Actor Framework For Go</title>
      <link>https://obaydakov.github.io/post/2017/an-introduction-to-gosiris-an-actor-framework-for-go/</link>
      <pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/an-introduction-to-gosiris-an-actor-framework-for-go/</guid>
      <description>gosiris
gosiris is an actor framework for Go allowing local or remote communications between actors and providing runtime discoverability plus distributed tracing.
The remote communications can be done using either an AMQP broker or Kafka. The runtime discoverability is achieved using an etcd registry and the distributed tracing is based on Zipkin.
Link</description>
    </item>
    
    <item>
      <title>Golang - Examples and Solutions</title>
      <link>https://obaydakov.github.io/post/2017/golang-examples-and-solutions/</link>
      <pubDate>Thu, 16 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/golang-examples-and-solutions/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Million WebSockets and Go</title>
      <link>https://obaydakov.github.io/post/2017/a-million-websockets-and-go/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/a-million-websockets-and-go/</guid>
      <description>This article is about how we developed the high-load WebSocket server with Go (Mail.ru).
Link</description>
    </item>
    
    <item>
      <title>Building Blockchain in Go.</title>
      <link>https://obaydakov.github.io/post/2017/building-blockchain-in-go/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/building-blockchain-in-go/</guid>
      <description>Introduction
Blockchain is one of the most revolutionary technologies of the 21st century, which is still maturing and which potential is not fully realized yet. In its essence, blockchain is just a distributed database of records. But what makes it unique is that it’s not a private database, but a public one, i.e. everyone who uses it has a full or partial copy of it. And a new record can be added only with a consent of other keepers of the database.</description>
    </item>
    
    <item>
      <title>Golang Guide: A List of Top Golang Frameworks, IDEs &amp; Tools</title>
      <link>https://obaydakov.github.io/post/2017/golang-guide-a-list-of-top-golang-frameworks-ides-tools/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/golang-guide-a-list-of-top-golang-frameworks-ides-tools/</guid>
      <description>We’ve compiled a list of the top frameworks, IDEs, and tools for Golang for your quick reference. Bookmark it on your browser so that you can come back whenever you’re working with Go!
Link</description>
    </item>
    
    <item>
      <title>Handling 1 Million Requests per Minute with Golang</title>
      <link>https://obaydakov.github.io/post/2017/handling-1-million-requests-per-minute-with-golang/</link>
      <pubDate>Wed, 15 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/handling-1-million-requests-per-minute-with-golang/</guid>
      <description>The Problem
While working on a piece of our anonymous telemetry and analytics system, our goal was to be able to handle a large amount of POST requests from millions of endpoints. The web handler would receive a JSON document that may contain a collection of many payloads that needed to be written to Amazon S3, in order for our map-reduce systems to later operate on this data.
Link</description>
    </item>
    
    <item>
      <title>Microservice in real-tim using Golf</title>
      <link>https://obaydakov.github.io/post/2017/microservice-in-real-tim-using-golf/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/microservice-in-real-tim-using-golf/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Microservices are hard — an invaluable guide to microservices</title>
      <link>https://obaydakov.github.io/post/2017/microservices-are-hard-an-invaluable-guide-to-microservices/</link>
      <pubDate>Thu, 26 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/microservices-are-hard-an-invaluable-guide-to-microservices/</guid>
      <description>Go + Microservices = Go kit
Microservices are hard — an invaluable guide to microservices
Watch the talks from the 2017 Microservices Practitioner Virtual Summit
Microservices are hard — an invaluable guide to microservices.
Containers Docker
Orchestration Kubernetes
Management Forge
Api Gateway / Canary Ambassador
Edge Proxy Envoy
Monitoring Prometheus
Local Testing Telepresence</description>
    </item>
    
    <item>
      <title>Go Tooling in Action</title>
      <link>https://obaydakov.github.io/post/2017/go-tooling-in-action/</link>
      <pubDate>Sun, 01 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/go-tooling-in-action/</guid>
      <description>Hi, and welcome to &amp;ldquo;Go Tooling in Action&amp;rdquo;. This is a multi hour workshop, so get ready for some intense learning!
After going through the whole content, you will know about what tools can help you better write Go code, how to build artifacts from that code, and how to understand the performance of your code once it&amp;rsquo;s running.
You should be relatively familiar with Go, even though we won&amp;rsquo;t be writing much code.</description>
    </item>
    
    <item>
      <title>Go and Big Data (Intel DAAL)</title>
      <link>https://obaydakov.github.io/post/2017/go-and-big-data-intel-daal/</link>
      <pubDate>Sat, 30 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/go-and-big-data-intel-daal/</guid>
      <description></description>
    </item>
    
    <item>
      <title>0 to Microservice in 5 minutes with Go and Minke</title>
      <link>https://obaydakov.github.io/post/2017/0-to-microservice-in-5-minutes-with-go-and-minke/</link>
      <pubDate>Sun, 17 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/0-to-microservice-in-5-minutes-with-go-and-minke/</guid>
      <description>0 to Microservice in 5 minutes with Go and Minke</description>
    </item>
    
    <item>
      <title>Web app using Microservices in Go</title>
      <link>https://obaydakov.github.io/post/2017/web-app-using-microservices-in-go/</link>
      <pubDate>Sun, 17 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/web-app-using-microservices-in-go/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Write web applications in Go without using a framework</title>
      <link>https://obaydakov.github.io/post/2017/write-web-applications-in-go-without-using-a-framework/</link>
      <pubDate>Sun, 17 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/write-web-applications-in-go-without-using-a-framework/</guid>
      <description>This screencast will teach you how to write a webapp in Go without using a framework. The tutorial is an introductory level tutorial. code: https://github.com/thewhitetulip/write-webapps-in-go-video, the code is put in branches, the code for fourth video is on branch &amp;ldquo;video4&amp;rdquo;
Completed app: https://github.com/thewhitetulip/Tasks.
This series is based on the tutorial https://github.com/thewhitetulip/web-dev-golang-anti-textbook/, you can download it from https://leanpub.com/antitextbookGo/.
Video
Book</description>
    </item>
    
    <item>
      <title>Golang development</title>
      <link>https://obaydakov.github.io/post/2017/golang-development/</link>
      <pubDate>Sat, 16 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://obaydakov.github.io/post/2017/golang-development/</guid>
      <description>Video</description>
    </item>
    
  </channel>
</rss>